openapi: "3.0.0"
info:
  version: 1.0.0
  title: DimeDiary API
  description: REST API for DimeDiary
paths:
  /transactions:
    get:
      summary: load transactions
      description: load transactions
      operationId: getTransactions
      tags:
        - Transaction
      parameters:
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          required: true
          description: Load transactions from this date on
        - in: query
          name: dateUntil
          schema:
            type: string
            format: date
          required: true
          description: Load transactions until this date
        - in: query
          name: bankAccountName
          schema:
            type: string
          required: false
          description: bank account name for which to load transaction - if not set transaction without a bank account will be received
      responses:
        "200":
          description: get all transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: save new transaction
      description: save new transaction
      operationId: createTransaction
      tags:
        - Transaction
      requestBody:
        description: the transaction to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        "201":
          description: transaction saved succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /transactions/{transactionId}:
    put:
      summary: update transaction
      description: update transaction
      operationId: updateTransaction
      tags:
        - Transaction
      parameters:
        - in: path
          name: transactionId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the transaction to update
      requestBody:
        description: the transaction to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        "204":
          description: transaction succesfully updated
    delete:
      summary: delete transaction
      description: delete transaction
      operationId: deleteTransaction
      tags:
        - Transaction
      parameters:
        - in: path
          name: transactionId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the transaction to delete
      responses:
        "204":
          description: transaction succesfully deleted
  /continuousTransactions:
    post:
      summary: save new continuous transaction
      description: save new continuous transaction
      operationId: createContinuousTransaction
      tags:
        - ContinuousTransaction
      requestBody:
        description: the continuous transaction to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousTransaction'
      responses:
        "201":
          description: continuous transaction saved succesfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuousTransaction'
  /continuousTransactions/{continuousTransactionId}:
    get:
      summary: load continuous transactions
      description: load continuous transactions
      operationId: getContinuousTransaction
      tags:
        - ContinuousTransaction
      parameters:
        - in: path
          name: continuousTransactionId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the continuous transaction to get
      responses:
        "200":
          description: get continuous transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContinuousTransaction'
    put:
      summary: update continuous transaction
      description: update continuous transaction
      operationId: updateContinuousTransaction
      tags:
        - ContinuousTransaction
      parameters:
        - in: path
          name: continuousTransactionId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the continuous transaction to update
      requestBody:
        description: the continuous transaction to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContinuousTransaction'
      responses:
        "204":
          description: continuous transaction succesfully updated
    delete:
      summary: delete continuous transaction
      description: delete continuous transaction
      operationId: deleteContinuousTransaction
      tags:
        - ContinuousTransaction
      parameters:
        - in: path
          name: continuousTransactionId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the continuous transaction to delete
      responses:
        "204":
          description: continuous transaction succesfully deleted
  /categories:
    get:
      summary: get all categories
      description: get all categories
      operationId: getCategories
      tags:
        - Category
      responses:
        "200":
          description: get all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: saves a new category
      description: saves a  category
      operationId: createCategory
      tags:
        - Category
      requestBody:
        description: category to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "201":
          description: category succesfully saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
  /categories/{categoryId}:
    put:
      summary: update bank category
      description: update category
      operationId: updateCategory
      tags:
        - Category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the category to update
      requestBody:
        description: category to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "204":
          description: category succesfully updated
    delete:
      summary: delete category
      description: delete category
      operationId: deleteCategory
      tags:
        - Category
      parameters:
        - in: path
          name: categoryId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the category to delete
      responses:
        "204":
          description: category succesfully deleted
  /bankAccountCategories:
    get:
      summary: get all bank account categories
      description: get all bank account categories
      operationId: getBankAccountCategory
      tags:
        - BankAccountCategory
      responses:
        "200":
          description: get all bank account categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: saves a new bank account category
      description: saves a new bank account category
      operationId: createBankAccountCategory
      tags:
        - BankAccountCategory
      requestBody:
        description: bank account category to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "201":
          description: bank account category succesfully saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
  /bankAccountCategories/{bankAccountCategoryId}:
    put:
      summary: update bank account category
      description: update bank account category
      operationId: updateBankAccountCategory
      tags:
        - BankAccountCategory
      parameters:
        - in: path
          name: bankAccountCategoryId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the bank account category to update
      requestBody:
        description: bank account category to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "204":
          description: bank account category succesfully updated
    delete:
      summary: delete bank account category
      description: delete bank account category
      operationId: deleteBankAccountCategory
      tags:
        - BankAccountCategory
      parameters:
        - in: path
          name: bankAccountCategoryId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the bank account category to delete
      responses:
        "204":
          description: bank account category succesfully deleted
  /bankAccounts:
    get:
      summary: get all bankaccounts
      description: get all bankaccounts
      operationId: getBankAccounts
      tags:
        - BankAccount
      responses:
        "200":
          description: get all bankaccounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: saves a new bankaccount
      description: saves a  newbankaccount
      operationId: createBankAccount
      tags:
        - BankAccount
      requestBody:
        description: bankaccount to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "201":
          description: bankaccount succesfully saved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
  /bankAccount/{bankAccountName}:
    get:
      summary: get bankaccount
      description: get bankaccount
      operationId: getBankAccount
      tags:
        - BankAccount
      parameters:
        - in: path
          name: bankAccountName
          schema:
            type: string
          required: true
          description: name of the bank account to get
      responses:
        "200":
          description: get bankaccount
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
    put:
      summary: update bank account
      description: update bankaccount
      operationId: updateBankAccount
      tags:
        - BankAccount
      parameters:
        - in: path
          name: bankAccountName
          schema:
            type: string
          required: true
          description: name of the bank account to update
      requestBody:
        description: bankaccount to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccount'
      responses:
        "204":
          description: bank account succesfully updated
    delete:
      summary: delete bank account
      description: delete bank account
      operationId: deleteBankAccount
      tags:
        - BankAccount
      parameters:
        - in: path
          name: bankAccountName
          schema:
            type: string
          required: true
          description: name of the bank account to delete
      responses:
        "204":
          description: bank account succesfully deleted
  /balances:
    get:
      summary: get balance
      description: get balance for date range and bank account
      operationId: getBalances
      tags:
        - Balance
      parameters:
        - in: query
          name: bankAccountId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the bankaccount to request the balance for
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date
          required: true
          description: first date to receive the balance
        - in: query
          name: dateUntil
          schema:
            type: string
            format: date
          required: true
          description: end date to receive the balance
      responses:
        "200":
          description: get all balances for the given bankaccount between the dateFrom and dateUntil
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceHistory'
    post:
      summary: recreate balance histories
      description: recreate balance histories for given bank account
      operationId: recreateBalances
      tags:
        - Balance
      parameters:
        - in: query
          name: bankAccountId
          schema:
            type: integer
            format: int32
          required: true
          description: id of the bankaccount for which the balances should be recreate
      responses:
        "204":
          description: balances succesfully recreate
components:
  schemas:
    Transaction:
      properties:
        id:
          type: integer
          format: int32
        subject:
          type: string
        amount:
          type: number
          format: float
        date:
          type: string
          format: date
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        category:
          $ref: '#/components/schemas/Category'
        continuousTransaction:
          $ref: '#/components/schemas/ContinuousTransaction'
        fixCost:
          type: boolean
    ContinuousTransaction:
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        amount:
          type: number
          format: float
        dateBegin:
          type: string
          format: date
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        category:
          $ref: '#/components/schemas/Category'
        recurrenceRule:
          type: string
        fixCost:
          type: boolean
    BankAccount:
      properties:
        name:
          type: string
        bankName:
          type: string
        iban:
          type: string
          format: iban
        bic:
          type: string
          format: bic
        bankAccountCategory:
          $ref: '#/components/schemas/BankAccountCategory'
        dateStartBalance:
          type: string
          format: date
        startBalance:
          type: number
          format: float
    BankAccountCategory:
      properties:
        name:
          type: string
        isRealAccount:
          type: boolean
    Category:
      properties:
        name:
          type: string
        fixCost:
          type: boolean
    BalanceHistory:
      properties:
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        date:
          type: string
          format: date
        balance:
          type: number
          format: float
